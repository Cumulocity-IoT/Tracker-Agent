name: Java Microservice Build & Release

on:
  push:
    tags:
      - '*'   # Trigger on any tag creation

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Set up JDK
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    # 3. Cache Maven dependencies
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # 4. Build & run unit tests
    - name: Build and run tests
      run: mvn clean test package --batch-mode

    # 5. Build Docker image and save as versioned tar
    - name: Build Docker image
      run: |
        VERSION=${GITHUB_REF_NAME#refs/tags/}   # Extract tag name
        docker build -t tcp-agent:$VERSION -f target/docker-work/Dockerfile target/docker-work
        docker save tcp-agent:$VERSION -o target/tcp-agent-$VERSION.tar
        mv target/*.jar target/tcp-agent-$VERSION.jar || true
        mv target/*.zip target/tcp-agent-$VERSION.zip || true

    # 6. Upload all build artifacts with consistent naming
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: tcp-agent-${{ github.ref_name }}
        path: |
          target/tcp-agent-${{ github.ref_name }}.jar
          target/tcp-agent-${{ github.ref_name }}.zip
          target/tcp-agent-${{ github.ref_name }}.tar

    # 7. Upload test reports separately
    - name: Upload test reports
      uses: actions/upload-artifact@v4
      with:
        name: test-reports
        path: target/surefire-reports/*.xml

    # 8. Create GitHub Release and attach artifacts
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: "Automated release for tcp-agent ${{ github.ref_name }}"
        files: |
          target/tcp-agent-${{ github.ref_name }}.jar
          target/tcp-agent-${{ github.ref_name }}.zip
          target/tcp-agent-${{ github.ref_name }}.tar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
